{"version":3,"sources":["../../../src/server/plugins/common.js"],"names":[],"mappings":"AAAA;;AAEA,IAAM,OAAO,QAAQ,MAAR,CAAb;AACA,IAAM,OAAO,QAAQ,MAAR,EAAgB,IAA7B;;AAEA,IAAM,iBAAiB,SAAjB,cAAiB,CAAC,MAAD,EAAS,OAAT,EAAkB,IAAlB,EAA2B;;AAEhD,MAAM,cAAc,QAAQ,KAAK,OAAO,QAAP,CAAgB,GAAhB,CAAoB,SAAzB,EAAoC,aAApC,CAAR,CAApB;;AAEA,SAAO,MAAP,CAAc;AACZ,UAAM,cADM;AAEZ,YAAQ,gBAAC,OAAD,EAAa;;AAEnB,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;AAEtC,YAAI,OAAO,QAAQ,KAAR,CAAc,aAAd,CAAX;;AAEA,YAAI,CAAC,IAAL,EAAW;AACT,iBAAO;AACL,gBAAI,SADC;AAEL,sBAAU;AAFL,WAAP;AAID;AACD,eAAO,QAAQ,IAAR,CAAP;AACD,OAXM,CAAP;AAYD;AAhBW,GAAd;;AAmBA,SAAO,MAAP,CAAc;AACZ,UAAM,qBADM;AAEZ,YAAQ,gBAAC,SAAD,EAAe;;AAErB,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;AAEtC,YAAI,CAAC,SAAL,EAAgB;AACd,iBAAO,QAAQ,EAAR,CAAP;AACD;;AAED,YAAI,SAAS,EAAb;;AAEA,YAAI,CAAC,MAAM,SAAS,SAAT,CAAN,CAAD,IAA+B,UAAU,MAAV,KAAqB,CAAxD,EAA2D;AACzD,iBAAO,IAAP,GAAc,OAAd;AACA,iBAAO,IAAP,GAAc,SAAd;AACA,iBAAO,IAAP,6BAAsC,SAAtC;AACD,SAJD,MAIO,IAAI,iBAAiB,IAAjB,CAAsB,SAAtB,CAAJ,EAAsC;;AAE3C,cAAM,UAAU,YACb,MADa,CACN;AAAA,mBAAW,QAAQ,OAAR,IAAoB,QAAQ,OAAR,CAAgB,WAAhB,OAAkC,UAAU,WAAV,EAAjE;AAAA,WADM,EACqF,CADrF,CAAhB;;AAGA,cAAI,CAAC,OAAL,EAAc;AACZ,mBAAO,OAAO,KAAK,QAAL,CAAc,mBAAd,CAAP,CAAP;AACD;;AAED,iBAAO,IAAP,GAAc,SAAd;AACA,iBAAO,IAAP,GAAc,SAAd;AACA,iBAAO,IAAP,GAAc,QAAQ,IAAtB;AAED,SAbM,MAaA;AACL,iBAAO,OAAO,KAAK,OAAL,CAAa,cAAb,CAAP,CAAP;AACD;;AAED,eAAO,QAAQ,MAAR,CAAP;AACD,OA9BM,CAAP;AA+BD;AAnCW,GAAd;;AAuCA,SAAO,MAAP;AACD,CA/DD;;AAiEA,eAAe,UAAf,GAA4B;AAC1B,QAAM,QADoB;AAE1B,WAAS,OAFiB;AAG1B,gBAAc;AAHY,CAA5B;;AAMA,OAAO,OAAP,GAAiB,cAAjB","file":"common.js","sourcesContent":["'use strict';\n\nconst Boom = require('boom');\nconst join = require('path').join;\n\nconst registerPlugin = (server, options, next) => {\n\n  const stationList = require(join(server.settings.app.sharedDir, 'stations.js'));\n\n  server.method({\n    name: 'getUserState',\n    method: (request) => {\n\n      return new Promise((resolve, reject) => {\n\n        let user = request.state['user-cookie'];\n\n        if (!user) {\n          user = {\n            id: 'unknown',\n            username: 'Unknown User'\n          };\n        }\n        return resolve(user);\n      });\n    }\n  });\n\n  server.method({\n    name: 'getShortcodeDetails',\n    method: (shortCode) => {\n\n      return new Promise((resolve, reject) => {\n\n        if (!shortCode) {\n          return resolve({});\n        }\n\n        let result = {};\n\n        if (!isNaN(parseInt(shortCode)) && shortCode.length === 5) {\n          result.type = 'train';\n          result.code = shortCode;\n          result.name = `C2C Train - Carriage ${shortCode}`;\n        } else if (/^[A-Za-z]{3}$/i.test(shortCode)) {\n\n          const station = stationList\n            .filter(station => station.crsCode && (station.crsCode.toLowerCase() === shortCode.toLowerCase()))[0];\n\n          if (!station) {\n            return reject(Boom.notFound('Station not found'));\n          }\n\n          result.type = 'station';\n          result.code = shortCode;\n          result.name = station.name;\n\n        } else {\n          return reject(Boom.badData('Unknown Code'));\n        }\n\n        return resolve(result);\n      });\n    }\n  });\n\n\n  return next();\n};\n\nregisterPlugin.attributes = {\n  name: 'common',\n  version: '1.0.0',\n  dependencies: []\n};\n\nmodule.exports = registerPlugin;\n"]}